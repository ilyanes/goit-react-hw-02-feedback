{"version":3,"sources":["App.styled.jsx","components/Buttons/Buttons.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Container","styled","div","TitleStatics","StyleNoFeedback","p","Buttons","buttons","onClick","map","button","name","Statistics","data","Good","Neutral","Bad","total","Number","positive","toFixed","App","state","allButtons","Object","keys","staticData","handleClick","e","target","setState","prevState","countTotalFeedback","values","this","reduce","acc","value","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEaA,EAAYC,IAAOC,IAAV,2SAcTC,EAAeF,IAAOC,IAAV,iIAQZE,EAAkBH,IAAOI,EAAV,4C,OCvBfC,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjC,OACE,mCACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBAAqBF,QAASA,EAASG,KAAMD,EAA7C,SACGA,GADUA,SCLVE,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3B,OACE,qCACE,sCACO,+BAAOA,EAAKC,UAEnB,yCACU,+BAAOD,EAAKE,aAEtB,qCACM,+BAAOF,EAAKG,SAElB,uCACQ,+BAAOH,EAAKI,WAEpB,mDAEE,iCAAOC,OAAOL,EAAKM,SAASC,WAA5B,eCbFC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPO,WAAaC,OAAOC,KAAK,EAAKH,O,EAC9BI,WAAa,G,EACbC,YAAc,SAACC,GACb,IAAQjB,EAASiB,EAAEC,OAAXlB,KACR,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAUpB,GAAQ,O,4CAG9B,WACE,IAEMqB,EAFSR,OAAOS,OAAOC,KAAKZ,OAEAa,QAAO,SAACC,EAAKC,GAC7C,OAAOD,EAAMC,IACZ,GAEGC,EACHJ,KAAKZ,MAAMR,KAAOkB,EAAsB,IAU3C,OARAE,KAAKR,WAAL,2BACKQ,KAAKZ,OACL,CACDL,MAAOe,EACPb,SAAUmB,IAKZ,eAACtC,EAAD,WACE,uDACA,cAAC,EAAD,CAASO,QAAS2B,KAAKX,WAAYf,QAAS0B,KAAKP,cACjD,eAACxB,EAAD,wBAE0B,IAAvB6B,EACC,cAAC,EAAD,CACEK,MAAOC,EACPrB,MAAOe,EACPnB,KAAMqB,KAAKR,aAGb,cAACtB,EAAD,0C,GA7CMmC,aAqDHlB,ICrDfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.abe1a8ec.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 35%;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  background-color: yellow;\r\n  border-radius: 20px;\r\n  box-shadow: 4px 3px 6px 4px rgba(155, 155, 155, 0.75);\r\n  padding: 40px;\r\n`;\r\n\r\nexport const TitleStatics = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyleNoFeedback = styled.p`\r\n  color: grey;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nexport const Buttons = ({ buttons, onClick }) => {\r\n  return (\r\n    <>\r\n      {buttons.map((button) => {\r\n        return (\r\n          <button key={button} onClick={onClick} name={button}>\r\n            {button}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nButtons.propTypes = {\r\n  buttons: PropTypes.array,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nexport const Statistics = ({ data }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        Good:<span>{data.Good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral:<span>{data.Neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad:<span>{data.Bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:<span>{data.total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:\r\n        <span>{Number(data.positive.toFixed())}% </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import { Component } from \"react\";\nimport { Container, StyleNoFeedback, TitleStatics } from \"./App.styled\";\nimport { Buttons } from \"./components/Buttons/Buttons\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n  };\n  allButtons = Object.keys(this.state);\n  staticData = {};\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  render() {\n    const values = Object.values(this.state);\n\n    const countTotalFeedback = values.reduce((acc, value) => {\n      return acc + value;\n    }, 0);\n\n    const countPositiveFeedbackPercentage =\n      (this.state.Good / countTotalFeedback) * 100;\n\n    this.staticData = {\n      ...this.state,\n      ...{\n        total: countTotalFeedback,\n        positive: countPositiveFeedbackPercentage,\n      },\n    };\n\n    return (\n      <Container>\n        <h1>Please leave feedback</h1>\n        <Buttons buttons={this.allButtons} onClick={this.handleClick}></Buttons>\n        <TitleStatics>\n          Statistics\n          {countTotalFeedback !== 0 ? (\n            <Statistics\n              value={countPositiveFeedbackPercentage}\n              total={countTotalFeedback}\n              data={this.staticData}\n            ></Statistics>\n          ) : (\n            <StyleNoFeedback>No feedback given</StyleNoFeedback>\n          )}\n        </TitleStatics>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}